Question 1. List the execution time of the weblog aggregation query for Hive, SparkSQL, and SparkSQL on Parquet.
Hive: 55.593 seconds
SparkSQL: 11.569 seconds
SparkSQL on Parquet: 2.626 seconds

Question 2. How many jobs does Hive launch? Does SparkSQL launch jobs?
Hive launched two map-reduce jobs. SparkSQL did not specifically record launching any jobs. However, it must be running map-reduce functions in the background, but I believe because it is in memory that is why it runs faster than Hive.

Question 3. Write a query which joins weblogs_parquet to user_info and counts the top 5 locations. List the locations.
I was not entirely sure of the join criteria that I should be using. I noticed that the user_info table was not unique on user_id, which means that some rows are duplicated when joining only on user_id between the tables. This duplication did not seem extreme though (the number of records increased from 40,002 in weblogs_parquet to 40,250 when joined to user_info on user_id. Another thing I noticed here is that there were a lot of user_id values in weblog_parquet that did not have a matching record in user_info (35,553). However, none of the other fields made sense as a join criteria. Here is the query that I was using to join the two:

select ui.location, count(*) as location_count
from weblogs_parquet wp
left join user_info ui
on wp.user_id = ui.user_id
group by ui.location
order by location_count desc
limit 15;

I see that the top results (including 6 in order to have 5 real locations besides null) are: NULL with 35,553 records, La Fayette with 49 records, Leeds with 47, Blountsville with 46, Hamilton with 45, and Hayden also with 45.